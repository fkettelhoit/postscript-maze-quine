/! {def} def
/+ {add}!
/- {sub}!
/* {mul}!
/~ {exch}!

/zip {
    mark ~
    aload
    length 2 idiv {2 array astore counttomark 1 roll} repeat
    counttomark array astore ~ pop
}!

[
    ( ) []
    (a) [[0 5 2 5 2 0 0 0 0 2.5 2 2.5] zip]
    (b) [[0 8 0 0 2 0 2 5 0 5] zip]
    (c) [[2 5 0 5 0 0 2 0] zip]
    (d) [[2 8 2 0 0 0 0 5 2 5] zip]
    (e) [[2 0 0 0 0 5 2 5 2 2.5 0 2.5] zip]
    (f) [[2 8 1 8 1 0] zip [0 5 2 5] zip]
    (g) [[0 -3 2 -3 2 5 0 5 0 0 2 0] zip]
    (h) [[0 8 0 0] zip [0 5 2 5 2 0] zip]
    (i) [[0 5 1 5 1 0 2 0] zip [1 7 1 8] zip]
    (j) [[0 5 1 5 1 -3 0 -3] zip [1 7 1 8] zip]
    (k) [[0 8 0 0] zip [2 5 0 2.5 2 0] zip]
    (l) [[0 8 1 8 1 0 2 0] zip]
    (m) [[0 0 0 5 1 5 1 0] zip [1 5 2 5 2 0] zip]
    (n) [[0 0 0 5 2 5 2 0] zip]
    (o) [[0 0 0 5 2 5 2 0 0 0] zip]
    (p) [[0 -3 0 5 2 5 2 0 0 0] zip]
    (q) [[2 0 0 0 0 5 2 5 2 -3] zip]
    (r) [[0 0 0 5 2 5] zip]
    (s) [[0 0 2 0 2 2.5 0 2.5 0 5 2 5] zip]
    (t) [[1 8 1 0 2 0] zip [0 5 2 5] zip]
    (u) [[0 5 0 0 2 0 2 5] zip]
    (v) [[0 5 1 0 2 5] zip]
    (w) [[0 5 0 0 1 2.5 2 0 2 5] zip]
    (x) [[0 5 2 0] zip [0 0 2 5] zip]
    (y) [[0 5 0 0 2 0] zip [2 5 2 -3 0 -3] zip]
    (z) [[0 5 2 5 0 0 2 0] zip]
    (0) [[0 0 0 8 2 8 2 0 0 0] zip]
    (1) [[0 5 1 8 1 0] zip [0 0 2 0] zip]
    (2) [[0 8 2 8 2 5 0 3 0 0 2 0] zip]
    (3) [[0 8 2 8 2 0 0 0] zip [0 4 2 4] zip]
    (4) [[1.5 0 1.5 8 0 1.5 2 1.5] zip]
    (5) [[2 8 0 8 0 5 2 5 2 0 0 0] zip]
    (6) [[2 8 0 8 0 0 2 0 2 5 0 5] zip]
    (7) [[0 8 2 8 0 0] zip]
    (8) [[0 5 0 8 2 8 2 5 0 5 0 0 2 0 2 5] zip]
    (9) [[2 5 0 5 0 8 2 8 2 0 0 0] zip]
    (!) [[1 8 1 3] zip [1 1 1 0] zip]
    (?) [[0 8 2 8 2 6 1 5 1 3] zip [1 1 1 0] zip]
    (.) [[1 1 1 0] zip]
    (+) [[0 4 2 4] zip [1 6 1 2] zip]
    (-) [[0 4 2 4] zip]
    (*) [[.5 5 1.5 3] zip [.5 3 1.5 5] zip]
    (/) [[0 0 2 8] zip]
    (~) [[0 4 .5 5 1 4 1.5 3 2 4] zip]
    (<) [[2 6 0 4 2 2] zip]
    (>) [[0 6 2 4 0 2] zip]
    ($) [[2 7 0 7 0 4 2 4 2 1 0 1] zip [1 8 1 0] zip]
    (@) [[2 5 1 5 1 0 2 0 2 7 0 7 0 -2 2 -2] zip]
    (%) [[0 0 2 8] zip [0 8 0 6] zip [2 2 2 0] zip]
    (P) [[0 0 0 8 2 8 2 5 0 5] zip]
    (S) [[0 2 0 0 2 0 2 3 1 4 0 5 0 8 2 8 2 6] zip]
    (A) [[0 0 1 8 2 0] zip [.5 2 1.5 2] zip]
    (B) [[0 0 0 8 1.5 8 1.5 5] zip [0 5 2 5 2 0 0 0] zip]
    (C) [[2 8 0 8 0 0 2 0] zip]
    ({) [[2 8 1 8 1 0 2 0] zip [0 4 1 4] zip]
    (}) [[0 8 1 8 1 0 0 0] zip [2 4 1 4] zip]
    ([) [[2 8 1 8 1 0 2 0] zip]
    (]) [[0 8 1 8 1 0 0 0] zip]
    <28> [[2 8 1 6 1 2 2 0] zip]
    <29> [[0 8 1 6 1 2 0 0] zip]
    <3b> [[1 5 1 3.5] zip [1 1.5 1 -1 .5 -2] zip]
] zip

50 dict begin
{
    dup
    0 get 0 get ~
    1 get !
} forall
currentdict /glyphs ~ !

/fontsize 24 !

/show {
    currentpoint /cp-y ~ ! /cp-x ~ !
    /font-x cp-x !
    /font-y cp-y !
    /glyph-x {0 get fontsize 6 div * font-x +}!
    /glyph-y {1 get fontsize 12 div * font-y +}!
    {
        dup
        glyphs ~ known {
            glyphs ~ get
        } {
            pop
            [[0 8 0 0 1 8 1 0 2 8 2 0] zip]
        }
        ifelse {
            dup
            0 get dup glyph-x ~ glyph-y moveto
            dup length 0 ~ getinterval
            {
                dup
                glyph-x ~
                glyph-y lineto
            } forall
        } forall
        /font-x font-x fontsize 0.5 * + !
    } forall
    cp-x cp-y moveto
    stroke
}!

% EXAMPLE USAGE:

/page [595 842] def

<</PageSize page>> setpagedevice
2 setlinewidth
1 setlinecap
1 setlinejoin

newpath
30 600 moveto
(the quick brown fox jumps over the lazy dog) show

30 650 moveto
(abcdefghijklmnopqrstuvwxyz) show

30 700 moveto
(0123456789()[]{}/;~.?!+-*<>$@%PSABC) show

30 750 moveto
(foo@bar.com) show

showpage
